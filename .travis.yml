
language: objective-c
osx_image: xcode10.1
sudo: false

cache: bundler

branches:
    only:
        - master
        - /^feature\/.*$/

env:
    global:
        - LC_CTYPE=en_US.UTF-8
        - LANG=en_US.UTF-8
    matrix:
        - PLATFORM="iOS Simulator" OS=8.4 SDK=iphonesimulator NAME="iPhone 8s" TEST_SCHEME="iOS Tests" INTEGRATION_SCHEME_PREFIX="iOS"
        - PLATFORM="iOS Simulator" OS=9.3 SDK=iphonesimulator NAME="iPhone 8s" TEST_SCHEME="iOS Tests" INTEGRATION_SCHEME_PREFIX="iOS"
        - PLATFORM="iOS Simulator" OS=10.3 SDK=iphonesimulator NAME="iPhone 8s" TEST_SCHEME="iOS Tests" INTEGRATION_SCHEME_PREFIX="iOS"
        - PLATFORM="iOS Simulator" OS=11.4 SDK=iphonesimulator NAME="iPhone 8s" TEST_SCHEME="iOS Tests" INTEGRATION_SCHEME_PREFIX="iOS"
        - PLATFORM="iOS Simulator" OS=12.1 SDK=iphonesimulator NAME="iPhone 8s" TEST_SCHEME="iOS Tests" INTEGRATION_SCHEME_PREFIX="iOS"

        - PLATFORM="iOS Simulator" OS=10.3 SDK="watchos3.2" NAME="iPhone 8s" INTEGRATION_SCHEME_PREFIX="watchOS"
        - PLATFORM="iOS Simulator" OS=11.4 SDK="watchos4.2" NAME="iPhone 8s" INTEGRATION_SCHEME_PREFIX="watchOS"
        - PLATFORM="iOS Simulator" OS=12.1 SDK="watchos4.2" NAME="iPhone 8s" INTEGRATION_SCHEME_PREFIX="watchOS"

        - PLATFORM=macOS OS=10.10 SDK="macOS" NAME="" TEST_SCHEME="OS X Tests" INTEGRATION_SCHEME_PREFIX="macOS"
        - PLATFORM=macOS OS=10.11 SDK="macOS" NAME="" TEST_SCHEME="OS X Tests" INTEGRATION_SCHEME_PREFIX="macOS"
        - PLATFORM=macOS OS=10.12 SDK="macOS" NAME="" TEST_SCHEME="OS X Tests" INTEGRATION_SCHEME_PREFIX="macOS"
        - PLATFORM=macOS OS=10.13 SDK="macOS" NAME="" TEST_SCHEME="OS X Tests" INTEGRATION_SCHEME_PREFIX="macOS"
        - PLATFORM=macOS OS=10.14 SDK="macOS" NAME="" TEST_SCHEME="OS X Tests" INTEGRATION_SCHEME_PREFIX="macOS"

        - PLATFORM="tvOS Simulator" OS=10.14 SDK="appletvos" NAME="Apple TV" TEST_SCHEME="OS X Tests" INTEGRATION_SCHEME_PREFIX="tvOS"
        - PLATFORM="tvOS Simulator" OS=10.14 SDK="appletvos" NAME="Apple TV" TEST_SCHEME="OS X Tests" INTEGRATION_SCHEME_PREFIX="tvOS"
        - PLATFORM="tvOS Simulator" OS=10.14 SDK="appletvos" NAME="Apple TV" TEST_SCHEME="OS X Tests" INTEGRATION_SCHEME_PREFIX="tvOS"
        - PLATFORM="tvOS Simulator" OS=10.14 SDK="appletvos" NAME="Apple TV" TEST_SCHEME="OS X Tests" INTEGRATION_SCHEME_PREFIX="tvOS"

before_install:
    - gem update --system
    - gem install bundler

after_install:
    - env
    - locale
    - bundle exec pod --version
    - bundle exec xcpretty --version
    - xcodebuild -version

after_script:
    - bundle exec danger

after_success:
    - bash <(curl -s https://codecov.io/bash)

jobs:
    include:
        - stage: compile_core
          script:
                - set -x
                - |
                  COMMON="-workspace Framework/Lumberjack.xcworkspace             \
                          -destination \"platform=$PLATFORM,OS=$OS,name=$NAME\"   \
                          -sdk $SDK                                               \
                          -configuration Release | bundle exec xcpretty -c"       \
                                                                                  \
                  xcodebuild clean build -scheme "CocoaLumberjack-Static" $COMMON \
                  xcodebuild clean build -scheme "CocoaLumberjack" $COMMON        \
                  xcodebuild clean build -scheme "CocoaLumberjackSwift" $COMMON

        - stage: test
          script:
                - set -x
                - |
                  COMMON="-project Tests/Tests.xcodeproj                          \
                          -destination \"platform=$PLATFORM,OS=$OS,name=$NAME\"   \
                          -sdk $SDK                                               \
                          GCC_INSTRUMENT_PROGRAM_FLOW_ARCS=YES                    \
                          GCC_GENERATE_TEST_COVERAGE_FILES=YES                    \
                          -configuration Release | bundle exec xcpretty -c"       \
                                                                                  \
                  xcodebuild test -scheme "iOS Tests" $COMMON                     \
                  xcodebuild test -scheme "OS X Tests" $COMMON

        - stage: compile_integration_only_ios
          if: env(INTEGRATION_SCHEME_PREFIX) = iOS
          script:
                - set -x
                - |
                  COMMON="-project Integration/Integration.xcodeproj                                  \
                          -destination \"platform=$PLATFORM,OS=$OS,name=$NAME\"                       \
                          -sdk $SDK                                                                   \
                          -configuration Release | bundle exec xcpretty -c"                           \
                                                                                                      \
                  xcodebuild build -scheme "$INTEGRATION_TEST_PREFIXStaticLibraryIntegration" $COMMON \
                  xcodebuild build -scheme "$INTEGRATION_TEST_PREFIXFrameworkIntegration" $COMMON     \
                  xcodebuild build -scheme "$INTEGRATION_TEST_PREFIXSwiftIntegration" $COMMON

        - stage: compile_integration_not_ios
          if: env(INTEGRATION_SCHEME_PREFIX) != iOS
          script:
                - xcodebuild build                                           \
                      -project Integration/Integration.xcodeproj             \
                      -scheme $INTEGRATION_TEST_PREFIXSwiftIntegration       \
                      -destination \"platform=$PLATFORM,OS=$OS,name=$NAME\"  \
                      -sdk $SDK                                              \
                      -configuration Release | bundle exec xcpretty -c"

        - stage: compile_ios_demo_apps
          if: env(TRAVIS_PULL_REQUEST) = false AND env(SDK) = iOS
          script:
                - xcodebuild build -workspace Demos/Demos.xcworkspace -scheme "BenchmarkIPhone" -configuration Release -sdk iphonesimulator | bundle exec xcpretty -c

                - xcodebuild build -workspace Demos/Demos.xcworkspace -scheme "CaptureASL" -sdk iphonesimulator | bundle exec xcpretty -c
                - xcodebuild build -workspace Demos/Demos.xcworkspace -scheme "RegisteredLoggingTest (Mobile)" -sdk iphonesimulator | bundle exec xcpretty -c
                - xcodebuild build -workspace Demos/Demos.xcworkspace -scheme "TextXcodeColors (Mobile)" -sdk iphonesimulator | bundle exec xcpretty -c
                - xcodebuild build -workspace Demos/Demos.xcworkspace -scheme "UniversalApp" -sdk iphonesimulator | bundle exec xcpretty -c
                - xcodebuild build -workspace Demos/Demos.xcworkspace -scheme "WebServerIPhone" -sdk iphonesimulator | bundle exec xcpretty -c

        - stage: compile_mac_demo_apps
          if: env(TRAVIS_PULL_REQUEST) = false AND env(SDK) = macOS
          script:
                - xcodebuild build -workspace Demos/Demos.xcworkspace -scheme "SQLiteLogger" | bundle exec xcpretty -c
                - xcodebuild build -workspace Demos/Demos.xcworkspace -scheme "CLI" | bundle exec xcpretty -c
                - xcodebuild build -workspace Demos/Demos.xcworkspace -scheme "BenchmarkMac" | bundle exec xcpretty -c
                - xcodebuild build -workspace Demos/Demos.xcworkspace -scheme "RegisteredLoggingTest (Desktop)" | bundle exec xcpretty -c
                - xcodebuild build -workspace Demos/Demos.xcworkspace -scheme "RollingTestMac" | bundle exec xcpretty -c
                - xcodebuild build -workspace Demos/Demos.xcworkspace -scheme "OverflowTestMac" | bundle exec xcpretty -c
                - xcodebuild build -workspace Demos/Demos.xcworkspace -scheme "ContextFilter" | bundle exec xcpretty -c
                - xcodebuild build -workspace Demos/Demos.xcworkspace -scheme "CoreDataLogger" | bundle exec xcpretty -c
                - xcodebuild build -workspace Demos/Demos.xcworkspace -scheme "CustomFormatters" | bundle exec xcpretty -c
                - xcodebuild build -workspace Demos/Demos.xcworkspace -scheme "CustomLogLevels" | bundle exec xcpretty -c
                - xcodebuild build -workspace Demos/Demos.xcworkspace -scheme "DispatchQueueLogger" | bundle exec xcpretty -c
                - xcodebuild build -workspace Demos/Demos.xcworkspace -scheme "FineGrainedLogging" | bundle exec xcpretty -c
                - xcodebuild build -workspace Demos/Demos.xcworkspace -scheme "GlobalLogLevel" | bundle exec xcpretty -c
                - xcodebuild build -workspace Demos/Demos.xcworkspace -scheme "LogFileCompressor" | bundle exec xcpretty -c
                - xcodebuild build -workspace Demos/Demos.xcworkspace -scheme "NonArcTest" | bundle exec xcpretty -c
                - xcodebuild build -workspace Demos/Demos.xcworkspace -scheme "PerUserLogLevels" | bundle exec xcpretty -c
                - xcodebuild build -workspace Demos/Demos.xcworkspace -scheme "TestXcodeColors (Desktop)" | bundle exec xcpretty -c
            